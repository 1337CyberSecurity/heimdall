syntax = "proto3";

package proto;

import "google/protobuf/timestamp.proto";

option go_package = "/server/proto";

service Heimdall {
    rpc GetSpan(GetSpanRequest) returns (GetSpanResponse) {}
    rpc GetEventRecords(GetEventRecordsRequest) returns (stream GetEventRecordsResponse) {}
}

message H128 {
    uint64 Hi = 1;
    uint64 Lo = 2;
}

message H160 {
    H128 Hi = 1;
    uint32 Lo = 2;
}

// ---- GetSpanRequest ----

message Validator {
    uint64 ID = 1;
    H160 Address = 2;
    int64 VotingPower = 3;
    int64 ProposerPriority = 4;
}

message ValidatorSet {
    repeated Validator Validators = 1;
    Validator Proposer = 2;
}

message Span {
    uint64 ID = 1;
    uint64 StartBlock = 2;
    uint64 EndBlock = 3;
    ValidatorSet ValidatorSet = 4;
    repeated Validator SelectedProducers = 5;
    string ChainID = 6;
}

message GetSpanRequest{
    uint64 ID = 1;
}

message GetSpanResponse {
    int64 Height = 1;
    Span Result = 2;
}

// ---- EVENT RECORDS ----

message EventRecord{
    uint64 ID = 1;
    string Contract = 2;
    string Data = 3;
    string TxHash = 4;
    uint64 LogIndex = 5;
    string ChainID = 6;
    google.protobuf.Timestamp Time = 7;
}

message GetEventRecordsRequest {
    uint64 FromID = 1;
    uint64 ToTime = 2;
    uint64 Limit = 3;
}

message GetEventRecordsResponse {
    int64 Height = 1;
    repeated EventRecord Result = 2;
}
